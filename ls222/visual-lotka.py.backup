#!/usr/bin/env python
from math import *
import thread
import random
import time
import visual


class rodent:
	def __init__(self):
		self.time_from_last_childbirth=0

class felix:
	def __init__(self):
		self.size=0
		self.is_virgin=1
		self.reproduction_gap=0
		self.time_from_last_childbirth=0
		self.age=0

def visualize(catn,mousen):
#	while True:
	num=40
	size=10
	catno=catn*num**2/(catn+mousen)
	cats=random.sample(range(num**2),catno)
	for i in range(num**2):
		if i in cats:
			dic[i].color=visual.color.red
		else :
			dic[i].color=visual.color.green

#	print 'painted'


	
mouse_size=20								#ind parameter
cat_mature_size=60							#ind parameter
cat_catch_rate=5*10**-4							#parameter
cat_efficiency=0.8							#parameter
a=0.2									#will get from slider
c=0.2									#will get from slider
mouse_no=1000
cat_no=1000
t=0
tmax=200
dt=0.4

timeli=[]
miceli=[]
catli=[]
	
mice=[rodent() for i in range(mouse_no)]
cats=[felix() for i in range(cat_no)]

catn=len(cats)
mousen=len(mice)

dic={}
num=40
size=10
catno=catn*num**2/(catn+mousen)
disp_cats=random.sample(range(num**2),catno)

for i in range(num**2):
	coords=((i%num)*size*2-num*size,(i/num)*size*2-num*size)
	if i in disp_cats:
		dic[i]=visual.sphere(pos=coords,radius=size,color=visual.color.red)
	else :
		dic[i]=visual.sphere(pos=coords,radius=size,color=visual.color.green)

class gui_display:
		
	def dynamics(*args,**kwargs):
		global anim_finished,mouse_size,cat_mature_size,cat_catch_rate,cat_efficiency,a,c,mouse_no,cat_no,t,tmax,dt,mice,cats,ax1,timeli,miceli,catli
		global catn,mousen
		catn=len(cats)
		mousen=len(mice)
			
		while len(mice)>0 and len(cats)>0 and t<tmax:
			catn=len(cats)
			mousen=len(mice)
			thread.start_new_thread(visualize,(catn,mousen))
			
			for mouse in mice:			
				if mouse.time_from_last_childbirth>=1/a:
					mouse.time_from_last_childbirth=0
					mice.append(rodent())
	
				mouse.time_from_last_childbirth+=dt
	
			ind=0
			while ind<len(cats):
				cat=cats[ind]
				cat.age+=dt
				num=cat_catch_rate*dt*len(mice)
				
				for i in range(int(num)):
					caught=random.randint(0,len(mice)-1)
					cat.size+=mouse_size*cat_efficiency			#size increases
					mice.pop(caught)
				
				if (num-int(num))>random.uniform(0,1):
					caught=random.randint(0,len(mice)-1)
					cat.size+=mouse_size*cat_efficiency			#size increases
					mice.pop(caught)
				
				if cat.size>cat_mature_size:
					if cat.is_virgin:
						cat.is_virgin=0
						cat.reproduction_gap=cat.age
						cats.append(felix())
					else :
						if cat.time_from_last_childbirth>cat.reproduction_gap:
							cats.append(felix())
							cat.time_from_last_childbirth=0
	
				if cat.is_virgin==0:
					cat.time_from_last_childbirth+=dt
	
	
				if len(cats)>50:
					if c*dt>random.uniform(0,1):
						cats.pop(ind)
					else :
						ind+=1
				else :
					ind+=1
	
	
			timeli.append(t)
			miceli.append(len(mice))
			catli.append(len(cats))
			print t,'\t',len(mice),'\t',len(cats)
	
			t+=dt

gui=gui_display()

import matplotlib.pyplot as plt
plt.plot(timeli,miceli,'go',timeli,catli,'ro')
plt.show()


